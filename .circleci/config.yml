---
version: 2.0
jobs:
  build:
    docker:
      - image: python:3.6
    steps:
      - run:
          name: Hello world!
          command: echo "Hello world!"
    working_directory: /usr/src/artman/

  unit-python2.7:
    docker:
      - image: python:2.7
    steps:
      - checkout
      - run:
          name: Install nox and codecov.
          command: pip install --upgrade nox-automation codecov
      - run:
          name: Run unit tests.
          command: nox -e "unit_tests(python_version='2.7')"
    working_directory: /usr/src/artman/

  unit-python3.4:
    docker:
      - image: python:3.4
    steps:
      - checkout
      - run:
          name: Install nox and codecov.
          command: pip install --upgrade nox-automation codecov
      - run:
          name: Run unit tests.
          command: nox -e "unit_tests(python_version='3.4')"
    working_directory: /usr/src/artman/

  unit-python3.5:
    docker:
      - image: python:3.5
    steps:
      - checkout
      - run:
          name: Install nox and codecov.
          command: pip install --upgrade nox-automation codecov
      - run:
          name: Run unit tests.
          command: nox -e "unit_tests(python_version='3.5')"
    working_directory: /usr/src/artman/

  unit-python3.6:
    docker:
      - image: python:3.6
    steps:
      - checkout
      - run:
          name: Install nox and codecov.
          command: pip install --upgrade nox-automation codecov
      - run:
          name: Run unit tests.
          command: nox -e "unit_tests(python_version='3.6')"
    working_directory: /usr/src/artman/


  smoke-csharp:
    docker:
      - image: googleapis/artman:latest
        environment:
          TERM: dumb
    steps:
      - checkout
      - run:
          name: Install latest artman
          command: |
            pip uninstall -y googleapis-artman
            pip install /usr/src/artman/
      - run:
          name: Build Pub/Sub (C#)
          command: artman2 --local --config=/googleapis/google/pubsub/artman_pubsub.yaml generate csharp_gapic
      - run:
          name: Build Speech (C#)
          command: artman2 --local --config=/googleapis/google/cloud/speech/artman_speech_v1.yaml generate csharp_gapic
    working_directory: /usr/src/artman/

  smoke-go:
    docker:
      - image: googleapis/artman:latest
        environment:
          TERM: dumb
    steps:
      - checkout
      - run:
          name: Install latest artman
          command: |
            pip uninstall -y googleapis-artman
            pip install /usr/src/artman/
      - run:
          name: Build Pub/Sub (Go)
          command: artman2 --local --config=/googleapis/google/pubsub/artman_pubsub.yaml generate go_gapic
      - run:
          name: Build Speech (Go)
          command: artman2 --local --config=/googleapis/google/cloud/speech/artman_speech_v1.yaml generate go_gapic
    working_directory: /usr/src/artman/

  smoke-java:
    docker:
      - image: googleapis/artman:latest
        environment:
          TERM: dumb
    steps:
      - checkout
      - run:
          name: Install latest artman
          command: |
            pip uninstall -y googleapis-artman
            pip install /usr/src/artman/
      - run:
          name: Build Pub/Sub (Java)
          command: artman2 --local --config=/googleapis/google/pubsub/artman_pubsub.yaml generate java_gapic
      - run:
          name: Build Speech (Java)
          command: artman2 --local --config=/googleapis/google/cloud/speech/artman_speech_v1.yaml generate java_gapic
    working_directory: /usr/src/artman/

  smoke-nodejs:
    docker:
      - image: googleapis/artman:latest
        environment:
          TERM: dumb
    steps:
      - checkout
      - run:
          name: Install latest artman
          command: |
            pip uninstall -y googleapis-artman
            pip install /usr/src/artman/
      - run:
          name: Build Pub/Sub (Node.js)
          command: artman2 --local --config=/googleapis/google/pubsub/artman_pubsub.yaml generate nodejs_gapic
      - run:
          name: Build Speech (Node.js)
          command: artman2 --local --config=/googleapis/google/cloud/speech/artman_speech_v1.yaml generate nodejs_gapic
    working_directory: /usr/src/artman/

  smoke-php:
    docker:
      - image: googleapis/artman:latest
        environment:
          TERM: dumb
    steps:
      - checkout
      - run:
          name: Install latest artman
          command: |
            pip uninstall -y googleapis-artman
            pip install /usr/src/artman/
      - run:
          name: Build Pub/Sub (PHP)
          command: artman2 --local --config=/googleapis/google/pubsub/artman_pubsub.yaml generate php_gapic
      - run:
          name: Build Speech (PHP)
          command: artman2 --local --config=/googleapis/google/cloud/speech/artman_speech_v1.yaml generate php_gapic
    working_directory: /usr/src/artman/

  smoke-python:
    docker:
      - image: googleapis/artman:latest
        environment:
          TERM: dumb
    steps:
      - checkout
      - run:
          name: Install latest artman
          command: |
            pip uninstall -y googleapis-artman
            pip install /usr/src/artman/
      - run:
          name: Build Pub/Sub (Python)
          command: artman2 --local --config=/googleapis/google/pubsub/artman_pubsub.yaml generate python_gapic
      - run:
          name: Build Speech (Python)
          command: artman2 --local --config=/googleapis/google/cloud/speech/artman_speech_v1.yaml generate python_gapic
    working_directory: /usr/src/artman/

  smoke-ruby:
    docker:
      - image: googleapis/artman:latest
        environment:
          TERM: dumb
    steps:
      - checkout
      - run:
          name: Install latest artman
          command: |
            pip uninstall -y googleapis-artman
            pip install /usr/src/artman/
      - run:
          name: Build Pub/Sub (Ruby)
          command: artman2 --local --config=/googleapis/google/pubsub/artman_pubsub.yaml generate ruby_gapic
      - run:
          name: Build Speech (Ruby)
          command: artman2 --local --config=/googleapis/google/cloud/speech/artman_speech_v1.yaml generate ruby_gapic
    working_directory: /usr/src/artman/

  golden-test:
    docker:
      - image: googleapis/artman:latest
        environment:
          TERM: dumb
    steps:
      - checkout
      - run:
          name: Install latest artman
          command: |
            pip install pytest
            pip uninstall -y googleapis-artman
            pip install /usr/src/artman/
            git clone https://github.com/googleapis/googleapis /usr/src/artman/test/golden/googleapis
      - run:
          name: Run golden test
          command: py.test test/golden/artman_golden_test.py --googleapis-dir=/usr/src/artman/test/golden/googleapis
      - store_artifacts:
            path: /usr/src/artman/test/golden/actual_library_example.golden
      - store_artifacts:
            path: /usr/src/artman/test/golden/actual_library_example_legacy.golden
    working_directory: /usr/src/artman/

workflows:
  version: 2
  tests:
    jobs:
      - unit-python2.7
      - unit-python3.4
      - unit-python3.5
      - unit-python3.6
      - smoke-csharp
      - smoke-go
      - smoke-java
      - smoke-nodejs
      - smoke-php
      - smoke-python
      - smoke-ruby
      - golden-test
